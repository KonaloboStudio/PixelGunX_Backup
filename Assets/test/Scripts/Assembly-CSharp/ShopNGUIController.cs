using UnityEngine;
using System.Collections.Generic;

public class ShopNGUIController : MonoBehaviour
{
	public enum CategoryNames
	{
		PrimaryCategory = 0,
		BackupCategory = 1,
		MeleeCategory = 2,
		SpecilCategory = 3,
		PremiumCategory = 4,
		HatsCategory = 5,
		ArmorCategory = 6,
		SkinsCategory = 7,
		CapesCategory = 8,
		BootsCategory = 9,
		GearCategory = 10,
	}

	public bool IsInventory;
	public GameObject prolongateRentText;
	public GameObject purchaseSuccessfulRent;
	public UILabel salePercRent;
	public GameObject saleRent;
	public GameObject limitedLabel;
	public GameObject upgradesLabel;
	public GameObject rentProperties;
	public GameObject notRented;
	public UILabel daysLeftLabel;
	public UILabel timeLeftLabel;
	public UILabel daysLeftValueLabel;
	public UILabel timeLeftValueLabel;
	public GameObject redBackForTime;
	public UIButton rent;
	public Transform rentScreenPoint;
	public ToggleButton showArmorButton;
	public ToggleButton showHatButton;
	public PropertyInfoScreenController infoScreen;
	public GameObject stub;
	public UIButton upgradeGear;
	public UISprite currencyImagePrice;
	public UISprite currencyImagePriceGear;
	public UISprite currencyImagePriceUpgradeGear;
	public UILabel price2Gear;
	public UILabel priceUpgradeGear;
	public GameObject wholePrice2Gear;
	public GameObject wholePriceUpgradeGear;
	public UIButton buyGear;
	public UISprite wholePriceBG2Gear;
	public UISprite wholePriceUpgradeBG2Gear;
	public UILabel fireRate;
	public UILabel fireRateMElee;
	public UILabel mobility;
	public UILabel mobilityMelee;
	public UILabel capacity;
	public UILabel damage;
	public UILabel damageMelee;
	public GameObject needTier;
	public UILabel needTierLabel;
	public GameObject purchaseSuccessful;
	public GameObject[] bystepCollider;
	public Transform trainingLAbels;
	public UISprite wholePriceBG;
	public List<Light> mylights;
	public float firstOFfset;
	public float secondOffset;
	public GameObject capeProperties;
	public GameObject hatsProperties;
	public GameObject bootsProperties;
	public GameObject armorProperties;
	public GameObject skinProperties;
	public GameObject gearProperties;
	public GameObject border;
	public CategoryNames offerCategory;
	public float scaleCoef;
	public Transform hatPoint;
	public Transform capePoint;
	public Transform bootsPoint;
	public Transform armorPoint;
	public GameObject mainPanel;
	public UIButton backButton;
	public UIButton coinShopButton;
	public UIPanel scrollViewPanel;
	public UIGrid wrapContent;
	public MyCenterOnChild carouselCenter;
	public GameObject body;
	public GameObject weaponPointShop;
	public Transform MainMenu_Pers;
	public string viewedId;
	public string chosenId;
	public bool EnableConfigurePos;
	public MultipleToggleButton category;
	public UIButton[] equips;
	public UISprite[] equippeds;
	public UIButton create;
	public UIButton buy;
	public UIButton upgrade;
	public UIButton unequip;
	public UIButton edit;
	public UIButton enable;
	public UIButton delete;
	public UIButton infoButton;
	public GameObject weaponProperties;
	public GameObject meleeProperties;
	public GameObject upgradesAnchor;
	public GameObject upgrade_1;
	public GameObject upgrade_2;
	public GameObject upgrade_3;
	public GameObject SpecialParams;
	public UILabel zoomLabel;
	public UILabel areaDamageLabel;
	public UILabel wallBreakLabel;
	public GameObject wholePrice;
	public GameObject sale;
	public UILabel price;
	public UILabel caption;
	public UILabel salePerc;
	public CategoryNames currentCategory;
	public bool inGame;
	public NickLabelController nick;
	public List<Camera> ourCameras;
	public UILabel onlyInThis;
	public AnimationCoroutineRunner animationCoroutineRunner;
	public GameObject ActiveObject;
	public UIButton leftArrow;
	public UIButton rightArrow;
	public UISprite hasNoItemsBanner;
	public int itemIndex;
	public bool _goingToEditCape;
}
