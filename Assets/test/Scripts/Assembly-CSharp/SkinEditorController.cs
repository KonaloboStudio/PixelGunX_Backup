using UnityEngine;
using Rilisoft;

public class SkinEditorController : MonoBehaviour
{
	public GameObject topPart;
	public GameObject downPart;
	public GameObject leftPart;
	public GameObject frontPart;
	public GameObject rigthPart;
	public GameObject backPart;
	public ButtonHandler saveButton;
	public ButtonHandler backButton;
	public ButtonHandler fillButton;
	public ButtonHandler eraserButton;
	public ButtonHandler brashButton;
	public ButtonHandler pencilButton;
	public ButtonHandler pipetteButton;
	public ButtonHandler colorButton;
	public ButtonHandler okColorInPalitraButton;
	public ButtonHandler setColorButton;
	public ButtonHandler saveChangesButton;
	public ButtonHandler cancelInSaveChangesButton;
	public ButtonHandler okInSaveSkin;
	public ButtonHandler cancelInSaveSkin;
	public ButtonHandler yesInLeaveSave;
	public ButtonHandler noInLeaveSave;
	public ButtonHandler prevHistoryButton;
	public ButtonHandler nextHistoryButton;
	public ButtonHandler yesSaveButtonInEdit;
	public ButtonHandler noSaveButtonInEdit;
	public GameObject previewPers;
	public GameObject previewPersShadow;
	public GameObject skinPreviewPanel;
	public GameObject partPreviewPanel;
	public GameObject editorPanel;
	public GameObject colorPanel;
	public GameObject saveChangesPanel;
	public GameObject saveSkinPanel;
	public GameObject leavePanel;
	public GameObject savePanelInEditorTexture;
	public string selectedPartName;
	public GameObject selectedSide;
	public UILabel pensilLabel;
	public UILabel brashLabel;
	public UILabel eraserLabel;
	public UILabel fillLabel;
	public UILabel pipetteLabel;
	public UITexture editorTexture;
	public UISprite oldColor;
	public UISprite newColor;
	public UIInput skinNameInput;
	public bool isSaveAndExit;
	public UISprite[] colorOnBrashSprites;
}
